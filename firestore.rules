rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // USERS
    // Admins can read/list all users.
    // Authenticated users can read/write their own user document.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read, list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // SUBSCRIPTION PLANS
    // Authenticated users can read plans.
    // Admins can write to plans.
    match /subscriptionPlans/{planId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // PAYMENTS
    // Admins can read/list all payments.
    // Users can read/list their own payments.
    match /payments/{paymentId} {
       allow read, list: if request.auth != null && 
          (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
           resource.data.userId == request.auth.uid);
    }
    
    // SUPPORT TICKETS
    // Admins can read/write all tickets.
    // Users can read/write/create their own tickets. (Assuming a create UI will be added later)
    match /supportTickets/{ticketId} {
        allow read, write: if request.auth != null && 
          (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
           (resource.data.user.email == request.auth.token.email)); // Future-proofing for user creation
    }

    // BRANDING
    // All authenticated users can read the branding config.
    // Only admins can write to the branding config.
    match /branding/config {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}